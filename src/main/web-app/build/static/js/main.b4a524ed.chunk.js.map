{"version":3,"sources":["serviceWorker.ts","shared/utils/action-type.util.ts","config/axios-interceptor.ts","component/authentication/reducer/authentication-reducer.ts","shared/reducer/actions-reducer.ts","shared/widgets/toast/CustomWidgetToast.ts","shared/utils/permission.ts","component/github/reducer/github-reducer.ts","shared/reducer/index.ts","shared/reducer/store.ts","shared/utils/uniqueKey.ts","shared/widgets/common/common.tsx","shared/widgets/textbox/CustomWidgetInput.ts","shared/widgets/textbox/CustomWidgetInputElement.tsx","shared/widgets/button/CustomWidgetButton.ts","shared/widgets/button/CustomWidgetButtonElement.tsx","component/authentication/login/login-page.tsx","component/github/service/restart-service.ts","shared/widgets/window/CustomWidgetWindowElement.tsx","shared/widgets/gridview/CustomGridview.ts","shared/widgets/gridview/custom-gridView-element.tsx","shared/widgets/spinner/LoadingBar.ts","shared/widgets/pivot/CustomPivotGrid.ts","shared/widgets/pivot/custom-pivot-grid-element.tsx","component/github/window/repository-search-result.tsx","component/github/modules/repository-result-panel.tsx","shared/widgets/pager/CustomWidgetPager.ts","shared/widgets/pager/CustomWidgetPagerElement.tsx","shared/widgets/dropDownBox/CustomWidgetDropDown.ts","shared/widgets/dropDownBox/CustomWidgetDropDownElement.tsx","component/github/models/language-json-data.ts","shared/widgets/listbox/CustomListBox.ts","shared/widgets/listbox/CustomListBoxElement.tsx","component/github/repository-search.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","REQUEST","actionType","SUCCESS","FAILURE","axios","defaults","timeout","baseURL","process","SERVER_API_URL","setupAxiosInterceptors","token","interceptors","request","use","config","headers","Authorization","response","err","status","alert","href","Promise","reject","ACTION_TYPES","initialState","loading","isAuthenticated","loginError","showModalLogin","account","toastAction","toast","permissionID","this","Toast","div","document","createElement","getElementsByTagName","appendChild","position","X","Y","createWidget","cssClass","elementPermissionID","userPermissions","hide","isRtl","enableRtl","setWidgetDirection","show","toastObj","message","content","height","width","destroy","element","onclick","undefined","HTMLElement","appendTo","label","objectType","repositoryReducer","bookmarkListReducer","bookmarkInsertReducer","bookmarkEditReducer","bookmarkDeleteReducer","commitReducer","rootReducer","combineReducers","authenticationState","state","action","type","payload","data","id_token","mainOperations","githubStateType","defaultMiddlewares","thunkMiddleware","promiseMiddleware","composedMiddlewares","middlewares","compose","applyMiddleware","initialize","createStore","reducer","UniqueID","prefix","lastId","Guid","newID","LabelPosition","replace","Math","random","toString","CustomWidgetCommon","props","widgetPanelID","widgetID","fontSize","widget","widgetProp","getWidget","React","Component","CustomWidgetInput","placeHolder","textbox","TextBox","setPlaceHolder","setFloatLabelType","stat","enabled","attributes","forEach","a","addAttributes","refresh","value","length","maxNumber","onkeypress","e","console","log","floatLabelType","placeholder","CustomWidgetInputElement","prop","widgetInput","initialProps","id","style","display","padding","CustomWidgetButton","button","translateLabel","Button","setLabel","disable","disabled","isEnabled","setDisability","styleName","isHidden","CustomWidgetButtonElement","LoginPage","iButtonSubmit","iTextBoxUseName","iTextBoxPassword","warningElementID","handleLogin","username","getValue","password","login","rememberMe","setStyleSheet","setType","onClick","prevProps","prevState","snapshot","from","pathname","search","showToast","to","className","Col","md","direction","mapDispatchToProps","entity","dispatch","async","post","get","connect","resetIfNotAthenticated","history","push","CustomWidgetWindowElement","dialog","windowID","Dialog","isModal","showCloseIcon","allowDragging","visible","windowWidget","setPosition","setAnimationSettings","effect","duration","animationSettings","beforeClose","target","setTargetElement","settleElementID","getElementById","dataBind","closeOnEscape","enableResize","header","x","y","children","Grid","Inject","ContextMenu","Resize","Filter","Page","Selection","Toolbar","CommandColumn","Sort","DetailRow","ExcelExport","PdfExport","Group","Edit","CustomGridview","grid","rowItem","rowSelected","gridLines","enableHover","rowHeight","allowResizing","allowTextWrap","dataSource","filter","f","getSelectedRowItem","getRowObjectFromUID","getSelectedRows","getAttribute","textWrapSettings","idName","getDataSource","setDataSource","cellSaved","actionComplete","allowPaging","allowGrouping","actionBegin","allowReordering","allowFiltering","allowSorting","allowExcelExport","allowPdfExport","allowEditing","allowAdding","allowDeleting","mode","newRowPosition","editTemplate","editSettings","template","showDeleteConfirmDialog","gridLine","allowEditOnDblClick","allowNextRowEdit","showConfirmDialog","isHover","contextMenuItems","toolbar","enableVirtualization","enableColumnVirtualization","filterSettings","persistSelection","checkboxOnly","cellSelectionMode","checkboxMode","enableSimpleMultiRowSelection","enableToggle","selectionSettings","pageSettings","columns","col","getColumnByField","field","headerText","refreshHeader","dataReady","enableAltRow","b","CustomGridViewElement","gridview","attrs","LoadingBar","bodyElement","loadingElement","loadingContainerElement","showStyle","hideStyle","append","hideLoading","setAttribute","CustomPivotGrid","pivotView","PivotView","dataSourceSettings","CustomPivotGridElement","pivotGrid","RepositorySearchResult","_windowContributor","repositoryUrl","commitGrid","loadingBar","chart","windowProp","url","showWindow","showLoading","fetchContributorList","repositoryID","event","panelID","pivot","setWidth","setHeight","gridSettings","columnWidth","commitsReducer","detailDtos","map","m","date","Date","configPivotGrid","showDialog","getDataSourceSettings","enableSorting","name","showSubTotals","values","rows","expandAll","filters","setprimaryXAxis","valueType","labelFormat","intervalType","edgeLabelPlacement","majorGridLines","setprimaryYAxis","rangePadding","minimum","maximum","interval","lineStyle","majorTickLines","minorTickLines","setChartArea","border","setTitle","setTooltip","enable","Row","chartSeries","count","setseries","xName","marker","yName","RepositoryResultPanel","repositoryButton","repositoryIcon","selectContributor","repositoryItem","full_name","repository","src","alt","html_url","color","maxWidth","description","backgroundColor","language","aria-label","viewBox","version","role","d","stargazers_url","stargazers_count","CustomWidgetPager","pager","Pager","size","pageSize","dropDownChanged","pageNumber","currentPage","pageCount","totalRecord","totalRecordsCount","click","eventName","handler","addEventListener","CustomWidgetPagerElement","CustomWidgetDropDown","combobox","DropDownList","fields","change","itemTemplate","items","itemIndex","addItem","index","getItems","showPopup","CustomWidgetDropDownElement","combo","languageDatasource","text","ListBox","CheckBoxSelection","CustomListBox","listBox","value1","isSelecting","selectItems","select","changeEventArgsEmitType","addItems","selectionSettingsModel","CustomListBoxElement","RepositorySearch","repositorySearchInput","repositorySearchButton","languageList","pageId","bookmarkList","initializeFields","initialLeftField","searchRepository","initializeSearchButton","setValue","pageSizeInput","languageDropDown","setIndex","fetchRepositoryList","requestValue","page","parseInt","sort","totalCount","total_count","setTotalRecordCount","setPageSize","result","r","setPager","overflowX","overflowY","borderLeft","overflow","bottom","margin","fetchBookmarkList","globalStore","clearAuthentication","messageKey","bindActionCreators","ReactDOM","render","store","createBrowserHistory","path","component","exact","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4a524ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n/**\n * Appends REQUEST async action type\n */\n\nexport const REQUEST = (actionType: any) => `${actionType}_PENDING`;\n\n/**\n * Appends SUCCESS async action type\n */\n\nexport const SUCCESS = (actionType: any) => `${actionType}_FULFILLED`;\n\n/**\n * Appends FAILURE async action type\n */\n\nexport const FAILURE = (actionType: any) => `${actionType}_REJECTED`;\n","import axios from 'axios';\n\nconst TIMEOUT = 60 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = process.env.SERVER_API_URL;\n\nconst setupAxiosInterceptors = (token: string) => {\n    const onRequestSuccess = (config: any) => {\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    };\n    const onResponseSuccess = (response: any) => response;\n    const onResponseError = (err: any) => {\n        const status = err.status || (err.response ? err.response.status : 0);\n        if (status === 403 || status === 401) {\n            alert('JWT Token is expired!')\n            window.location.href = \"/\";\n        }\n        return Promise.reject(err);\n    };\n\n    axios.interceptors.request.use(onRequestSuccess);\n    axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\n\nexport default setupAxiosInterceptors;\n","import axios from 'axios';\nimport {FAILURE, REQUEST, SUCCESS} from \"../../../shared/utils/action-type.util\";\nimport setupAxiosInterceptors from \"../../../config/axios-interceptor\";\n\nexport const ACTION_TYPES = {\n    ACCOUNT: 'authentication/ACCOUNT',\n    AUTHENTICATE: 'authentication/AUTHENTICATE',\n    LOGOUT: 'authentication/LOGOUT',\n    CLEAR_AUTH: 'authentication/CLEAR_AUTH'\n\n};\n\n\nconst initialState = {\n    loading: false,\n    isAuthenticated: false,\n    loginError: false, // Errors returned from server side\n    showModalLogin: false,\n    account: {},\n};\n\nexport type AuthenticationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AuthenticationState = initialState, action: any): AuthenticationState => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.ACCOUNT):\n        case REQUEST(ACTION_TYPES.LOGOUT):\n            return {\n                ...state,\n                loading: true\n            };\n        case FAILURE(ACTION_TYPES.ACCOUNT):\n        case FAILURE(ACTION_TYPES.LOGOUT):\n            return {\n                ...initialState,\n                account: undefined\n            };\n        case SUCCESS(ACTION_TYPES.AUTHENTICATE): {\n            setupAxiosInterceptors( action.payload.data.id_token);\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true\n            };\n        }\n        case SUCCESS(ACTION_TYPES.ACCOUNT): {\n            return {\n                ...state,\n                loading: false,\n                account: action.payload.data,\n            };\n        }\n        case ACTION_TYPES.CLEAR_AUTH:\n            return {\n                ...state,\n                loading: false,\n                showModalLogin: true,\n                isAuthenticated: false\n            };\n        default:\n            return state;\n    }\n};\n\n/*\n* after authenticating, by existing JWT token\n* it gets user details from database for setting a custom UI for each User.\n* */\nexport const getUserAccount = () => async (dispatch: any) => await dispatch({\n    type: ACTION_TYPES.ACCOUNT,\n    payload: axios.get('/api/account')\n});\n\n/*\n* Authenticating Users!\n* */\nexport const login = (entity: any) => async (dispatch: any) => {\n    await dispatch({\n        type: ACTION_TYPES.AUTHENTICATE,\n        payload: axios.post('/authenticate', entity)\n    });\n    await dispatch(getUserAccount());\n};\n","import {CustomWidgetToast} from \"../widgets/toast/CustomWidgetToast\";\n\nconst initialState = {\n    toastAction: new CustomWidgetToast()\n};\n\nexport type MainOperations = Readonly<typeof initialState>;\n\nexport default (state: MainOperations = initialState): MainOperations => state","import {Toast, ToastModel} from '@syncfusion/ej2-notifications';\n\nimport {CheckUserPermissionOnControl} from \"../../../shared/utils/permission\";\nimport {IWidgetCommon} from \"../common/common\";\n\nexport class CustomWidgetToast implements IWidgetCommon<Toast> {\n    private toast: Toast;\n    permissionID = true;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        this.permissionID = isAuthenticated;\n    }\n\n    constructor() {\n        this.toast = new Toast();\n        const div = document.createElement('div');\n        document.getElementsByTagName('body')[0].appendChild(div);\n        this.toast.position = {X: 'Left', Y: 'Bottom'};\n        this.createWidget(div);\n        this.toast.cssClass = 'CustomWidget-toast-style';\n    }\n\n    hide() {\n        this.toast.hide();\n    }\n\n    setWidgetDirection(isRtl: any): void {\n        this.toast.position = isRtl ? {X: 'Left', Y: 'Bottom'} : {X: 'Right', Y: 'Bottom'};\n        this.toast.enableRtl = isRtl;\n    }\n\n    showWithRtl(isRtl: boolean) {\n        this.setWidgetDirection(isRtl);\n        this.toast.show();\n    }\n\n    show(toastObj?: ToastModel) {\n        this.toast.show(toastObj);\n    }\n\n    showToast(message: string) {\n        this.hide();\n        this.show({content: message})\n    }\n\n    setHeight(height: number) {\n    }\n\n    setWidth(width: number) {\n    }\n\n    destroy(): void {\n        this.toast.destroy();\n    }\n\n    getWidget() {\n        return this.toast;\n    }\n\n    getElement() {\n        return this.toast.element;\n    }\n\n    OnClick(onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null) {\n        this.toast.element.onclick = onclick;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.toast.appendTo(element);\n            } else {\n                this.toast.appendTo('#' + element);\n            }\n        }\n    }\n\n    getLabel(): any {\n        return this.toast.content;\n    }\n\n    setLabel(label: string) {\n        this.toast.content = label;\n    }\n\n}\n","export const CheckUserPermissionOnControl = (elementPermissionID: any, userPermissions: any[]) => {\n    //TODO not implemented\n    return true;\n}","import axios from 'axios';\nimport {FAILURE, REQUEST, SUCCESS} from \"../../../shared/utils/action-type.util\";\nimport {IPayloadContributor, IPayloadRepository} from \"../../../shared/type/dataTypes-utils\";\nimport {RepositoryRequestParamModel} from \"../models/repository-request-param-model\";\nimport {RepositoryResponseModel} from \"../models/repository-response-model\";\nimport {CommitModel} from '../models/commit-model';\n\n\nexport const ACTION_TYPES = {\n    FETCH_BOOKMARK_LIST: ':github/FETCH_BOOKMARK_LIST',\n    INSERT_BOOKMARK: ':github/INSERT_BOOKMARK',\n    UPDATE_BOOKMARK_LIST: ':github/UPDATE_BOOKMARK_LIST',\n    DELETE_BOOKMARK_LIST: ':github/DELETE_BOOKMARK_LIST',\n    FETCH_REPOSITORY_LIST: ':github/FETCH_REPOSITORY_LIST',\n    FETCH_COMMIT_LIST: ':github/FETCH_CONTRIBUTOR_LIST'\n};\n\nexport const objectType: Readonly<any> = {};\nexport const arrayType: Readonly<any> = [];\nexport const commitType: Readonly<{ detailDtos?: CommitModel[], repositoryID?: string }> = {};\nexport const repositoryType: Readonly<RepositoryResponseModel> = {};\n\nconst initialState = {\n    loading: false,\n    repositoryReducer: repositoryType,\n    bookmarkListReducer: arrayType,\n    bookmarkInsertReducer: objectType,\n    bookmarkEditReducer: objectType,\n    bookmarkDeleteReducer: objectType,\n    commitReducer: commitType,\n};\n\nexport type GithubStateType = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: GithubStateType = initialState, action: any): GithubStateType => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.FETCH_REPOSITORY_LIST):\n        case REQUEST(ACTION_TYPES.FETCH_COMMIT_LIST):\n        case REQUEST(ACTION_TYPES.FETCH_BOOKMARK_LIST):\n        case REQUEST(ACTION_TYPES.INSERT_BOOKMARK):\n        case REQUEST(ACTION_TYPES.UPDATE_BOOKMARK_LIST):\n        case REQUEST(ACTION_TYPES.DELETE_BOOKMARK_LIST):\n            return {\n                ...state,\n                loading: true\n            };\n        case FAILURE(ACTION_TYPES.FETCH_REPOSITORY_LIST):\n        case FAILURE(ACTION_TYPES.FETCH_COMMIT_LIST):\n        case FAILURE(ACTION_TYPES.FETCH_BOOKMARK_LIST):\n        case FAILURE(ACTION_TYPES.INSERT_BOOKMARK):\n        case FAILURE(ACTION_TYPES.UPDATE_BOOKMARK_LIST):\n        case FAILURE(ACTION_TYPES.DELETE_BOOKMARK_LIST):\n            return {\n                ...state,\n                loading: false,\n            };\n        case SUCCESS(ACTION_TYPES.FETCH_REPOSITORY_LIST):\n            return {\n                ...state,\n                loading: false,\n                repositoryReducer: action.payload.data\n            };\n        case SUCCESS(ACTION_TYPES.FETCH_COMMIT_LIST):\n            return {\n                ...state,\n                loading: false,\n                commitReducer: action.payload.data\n            };\n        case SUCCESS(ACTION_TYPES.FETCH_BOOKMARK_LIST):\n            return {\n                ...state,\n                loading: false,\n                bookmarkListReducer: action.payload.data\n            };\n        case SUCCESS(ACTION_TYPES.INSERT_BOOKMARK):\n            return {\n                ...state,\n                loading: false,\n                bookmarkInsertReducer: action.payload.data\n            };\n        case SUCCESS(ACTION_TYPES.UPDATE_BOOKMARK_LIST):\n            return {\n                ...state,\n                loading: false,\n                bookmarkEditReducer: action.payload.data\n            };\n        case SUCCESS(ACTION_TYPES.DELETE_BOOKMARK_LIST):\n            return {\n                ...state,\n                loading: false,\n                bookmarkDeleteReducer: action.payload.data\n            };\n        default:\n            return state;\n    }\n};\n\n// Actions\nexport const fetchBookmarkList: IPayloadContributor<any> = () => ({\n    type: ACTION_TYPES.FETCH_COMMIT_LIST,\n    payload: axios.get('/api/github-bookmark-url')\n});\n\n// Actions\nexport const insertBookmark: IPayloadContributor<any> = entiry => ({\n    type: ACTION_TYPES.FETCH_COMMIT_LIST,\n    payload: axios.post('/api/github-bookmark-url', entiry)\n});\n\n// Actions\nexport const deleteBookmark: IPayloadContributor<any> = entiry => ({\n    type: ACTION_TYPES.FETCH_COMMIT_LIST,\n    payload: axios.delete('/api/github-bookmark-url', {data: entiry})\n});\n\n// Actions\nexport const editBookmark: IPayloadContributor<any> = entiry => ({\n    type: ACTION_TYPES.FETCH_COMMIT_LIST,\n    payload: axios.put('/api/github-bookmark-url', entiry)\n});\n\n// Actions\nexport const fetchRepositoryList: IPayloadRepository<any> = (entity: RepositoryRequestParamModel) => ({\n    type: ACTION_TYPES.FETCH_REPOSITORY_LIST,\n    payload: axios.post('/api/github-repository-url', entity)\n});\n\n// Actions\nexport const fetchCommitList: IPayloadContributor<any> = (url, repositoryID) => ({\n    type: ACTION_TYPES.FETCH_COMMIT_LIST,\n    payload: axios.get('/api/github-repository-url?repositoryUrl=' + url + '&repositoryID=' + repositoryID)\n});","import {combineReducers} from 'redux';\nimport authenticationState, {AuthenticationState} from \"../../component/authentication/reducer/authentication-reducer\";\nimport mainOperations, {MainOperations} from \"./actions-reducer\";\nimport githubStateType, {GithubStateType} from \"../../component/github/reducer/github-reducer\";\n\n\nexport interface IRootState {\n    readonly githubStateType: GithubStateType;\n    readonly authenticationState: AuthenticationState;\n    readonly mainOperations: MainOperations\n\n}\n\nconst rootReducer = combineReducers<IRootState>({\n    authenticationState,\n    mainOperations,\n    githubStateType\n});\n\nexport default rootReducer;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer, {IRootState} from \"./index\";\n\nconst defaultMiddlewares = [\n    thunkMiddleware,\n    promiseMiddleware\n];\nconst composedMiddlewares = (middlewares:any) => compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\n\nconst initialize = (initialState?: IRootState, middlewares = [] as any[]) => createStore(reducer, initialState, composedMiddlewares(middlewares));\n\nexport default initialize;\n","export default function UniqueID(prefix = 'CustomWidget-') {\n  const lastId = Guid.newID();\n  return `${prefix}${lastId}`;\n}\n\nexport class Guid {\n  static newID() {\n    return 'xxxxxxxx'.replace(/[x]/g, function () {\n      const random = Math.random() * 16 | 0;\n      return random.toString(16);\n    });\n  }\n}\n","import React from 'react';\nimport UniqueID from \"../../../shared/utils/uniqueKey\";\n\nexport interface IWidgetCommon<T> extends IWidgetLabel {\n    setHeight(height: number | string):void;\n\n    setWidth(width: number | string):void;\n\n    destroy(): void;\n\n    getWidget(): T;\n\n    createWidget(element: any): void;\n\n    setWidgetDirection(isRtl: boolean): void;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void;\n}\n\ninterface IWidgetLabel {\n    getLabel(): string;\n\n    setLabel(label: string):void;\n}\n\nexport enum LabelPosition {\n    Left,\n    Right,\n    Top,\n    None\n}\n\nexport interface IWidgetOps<T> {\n   getWidget?(): T;\n}\n\nexport interface IWidgetProps {\n    widgetProp: IWidgetOps<any>;\n    width?: string;\n}\n\nexport class CustomWidgetCommon<T> extends React.Component<IWidgetProps> {\n    widgetPanelID: string;\n    widgetID: string;\n    fontSize='';\n    height='';\n    width='';\n    widget!: T;\n\n    constructor(props:any) {\n        super(props);\n        this.widgetPanelID = UniqueID();\n        this.widgetID = UniqueID();\n    }\n\n    initialProps(widgetProp: IWidgetOps<any>) {\n    widgetProp.getWidget = () => this.widget as any;\n  }\n}","import {FloatLabelType, TextBox} from '@syncfusion/ej2-inputs';\nimport {IWidgetCommon} from \"../common/common\";\n\nimport {CheckUserPermissionOnControl} from \"../../../shared/utils/permission\";\n\nexport class CustomWidgetInput implements IWidgetCommon<TextBox> {\n    private textbox: TextBox;\n    permissionID = true;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        if (!isAuthenticated) {\n            // this.setDisability(false);\n        }\n        this.permissionID = isAuthenticated;\n    }\n\n    constructor(element?: string | HTMLElement, placeHolder?: string, isRtl?: boolean) {\n        this.textbox = new TextBox();\n        this.setPlaceHolder(placeHolder);\n        this.setFloatLabelType('Auto');\n        this.setWidgetDirection(isRtl);\n        this.createWidget(element);\n    }\n\n    setWidgetDirection(isRtl: any): void {\n        this.textbox.enableRtl = isRtl;\n    }\n\n    setEnable(stat: boolean) {\n        this.textbox.enabled = stat;\n    }\n\n    setType(type: string) {\n        this.textbox.type = type;\n    }\n\n    addAttributes(attributes: Array<{ [key: string]: string }>) {\n        attributes.forEach(a => this.textbox.addAttributes(a));\n    }\n\n    render() {\n        this.textbox.refresh();\n    }\n\n    setHeight(height: number) {\n    }\n\n    setWidth(width: number | string) {\n        this.textbox.width = width;\n    }\n\n    setValue(value: string) {\n        this.textbox.value = value;\n    }\n\n    getValue() {\n        return (this.textbox.value !== null && this.textbox.value.length > 0) ? this.textbox.value : '';\n    }\n\n    destroy(): void {\n        this.textbox.destroy();\n    }\n\n    getWidget() {\n        return this.textbox;\n    }\n\n\n    getElement() {\n        return this.textbox.element;\n    }\n\n    setMaxLength(maxNumber: number) {\n        this.textbox.element.onkeypress = (e) => {\n            console.log(this.textbox.value);\n            if (this.textbox.value.length <= maxNumber) {\n                return false;\n            }\n        };\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.textbox.appendTo(element);\n            } else {\n                this.textbox.appendTo('#' + element);\n            }\n        }\n    }\n\n    setFloatLabelType(floatLabelType: FloatLabelType): void {\n        this.textbox.floatLabelType = floatLabelType;\n    }\n\n    getPlaceHolder(): string {\n        return this.textbox.placeholder;\n    }\n\n    setPlaceHolder(label: string) {\n        this.textbox.placeholder = label;\n    }\n\n    getLabel(): string {\n        return this.textbox.placeholder;\n    }\n\n    setLabel(label: string) {\n        this.textbox.placeholder = label;\n    }\n}\n","import React from 'react';\nimport {CustomWidgetCommon} from \"../common/common\";\nimport {CustomWidgetInput} from \"./CustomWidgetInput\";\n\nexport class CustomWidgetInputElement extends CustomWidgetCommon<CustomWidgetInput> {\n    widgetInput: CustomWidgetInput;\n\n    constructor(prop: any) {\n        super(prop);\n        this.widgetInput = new CustomWidgetInput();\n        this.widget = this.widgetInput;\n        this.initialProps(this.props.widgetProp);\n    }\n\n    componentDidMount(): void {\n        this.widget.createWidget(this.widgetID);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<div id={this.widgetPanelID}\n                     style={{width: this.props.width, height: this.height, display: 'flex', fontSize: this.fontSize}}>\n            <div style={{padding: '0 7px 0',width:'100%'}}>\n                <input style={{height: this.height}} id={this.widgetID}/>\n            </div>\n        </div>);\n    }\n\n    destroy(): void {\n        this.widget.destroy();\n    }\n}\n","import {Button} from '@syncfusion/ej2-buttons';\n\nimport {CheckUserPermissionOnControl} from \"../../../shared/utils/permission\";\nimport {IWidgetCommon} from \"../common/common\";\n\nexport class CustomWidgetButton implements IWidgetCommon<Button> {\n    private button: Button;\n    private translateLabel = '';\n    private placeholder = '';\n    isAuthenticated = true;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        if (!isAuthenticated) {\n            this.setDisability(false);\n        }\n        this.isAuthenticated = isAuthenticated;\n    }\n\n    constructor(element?: string | HTMLElement, label?: string, isRtl?: boolean) {\n        this.isAuthenticated = true;\n        this.button = new Button();\n        this.createWidget(element);\n        this.setWidgetDirection(isRtl);\n        this.setLabel(label);\n        this.button.cssClass = 'e-control e-btn e-lib e-outline e-primary';\n    }\n\n    setDisability(disable: boolean) {\n        this.button.disabled = !this.isAuthenticated || disable;\n    }\n\n    setWidgetDirection(isRtl: any): void {\n        this.button.enableRtl = isRtl;\n    }\n\n    setEnable(isEnabled: boolean) {\n        this.setDisability(!isEnabled);\n    }\n\n    setHeight(height: number) {\n    }\n\n    setWidth(width: number) {\n    }\n\n    setStyleSheet(styleName: string) {\n        this.button.cssClass += ' '+ styleName;\n    }\n\n    destroy(): void {\n        this.button.destroy();\n    }\n\n    getWidget() {\n        return this.button;\n    }\n\n    getElement() {\n        return this.button.element;\n    }\n\n    OnClick(onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null) {\n        this.button.element.onclick = onclick;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.button.appendTo(element);\n            } else {\n                this.button.appendTo('#' + element);\n            }\n        }\n    }\n\n    onClick(onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null): void {\n        if (this.isAuthenticated) {\n            this.button.element.onclick = onclick;\n        }\n    }\n\n    setLabel(label?: string) {\n        if (label !== undefined) {\n            this.button.content = label;\n        }\n    }\n\n    setHidden(isHidden: boolean) {\n        // TODO should be implemented after demo\n    }\n\n\n    getLabel() {\n        return this.button.content;\n    }\n\n    setTranslateLink(translateLabel: string) {\n        this.translateLabel = translateLabel;\n    }\n\n    getTranslateLink() {\n        return this.translateLabel;\n    }\n\n    getPlaceHolder() {\n        return this.placeholder;\n    }\n\n    setPlaceHolder(placeholder: string) {\n        this.placeholder = placeholder;\n    }\n}\n","import React from 'react';\nimport {CustomWidgetCommon} from \"../common/common\";\nimport {CustomWidgetButton} from \"./CustomWidgetButton\";\nimport UniqueID from \"../../utils/uniqueKey\";\n\n\nexport class CustomWidgetButtonElement extends CustomWidgetCommon<CustomWidgetButton> {\n\n    constructor(prop: any) {\n        super(prop);\n        this.widget = new CustomWidgetButton();\n        this.widgetID = UniqueID();\n        this.initialProps(this.props.widgetProp);\n    }\n\n\n    componentDidMount(): void {\n        this.widget.createWidget(this.widgetID);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div style={{width: this.props.width, height: this.height}} id={this.widgetPanelID}>\n                <button style={{height: this.height, fontSize: this.fontSize}} id={this.widgetID}/>\n            </div>);\n    }\n\n    destroy(): void {\n        this.widget.destroy();\n    }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport './login-page.css';\nimport {IRootState} from \"../../../shared/reducer\";\nimport {Redirect, RouteComponentProps} from \"react-router\";\nimport {login} from \"../reducer/authentication-reducer\";\nimport {Col} from \"react-bootstrap\";\nimport {IWidgetOps} from \"../../../shared/widgets/common/common\";\nimport {CustomWidgetButton} from \"../../../shared/widgets/button/CustomWidgetButton\";\nimport {CustomWidgetInput} from \"../../../shared/widgets/textbox/CustomWidgetInput\";\nimport {CustomWidgetInputElement} from \"../../../shared/widgets/textbox/CustomWidgetInputElement\";\nimport {CustomWidgetButtonElement} from \"../../../shared/widgets/button/CustomWidgetButtonElement\";\nimport UniqueID from \"../../../shared/utils/uniqueKey\";\n\ninterface IProps extends StateProps, DispatchProps, RouteComponentProps<{}> {\n\n}\n\nclass LoginPage extends React.Component<IProps> {\n    private iButtonSubmit: IWidgetOps<CustomWidgetButton> = {};\n    private iTextBoxUseName: IWidgetOps<CustomWidgetInput> = {};\n    private iTextBoxPassword: IWidgetOps<CustomWidgetInput> = {};\n    warningElementID: string;\n\n    constructor(props: any) {\n        super(props);\n        this.warningElementID = UniqueID();\n    }\n\n\n    componentDidMount(): void {\n        let widget = this.iButtonSubmit.getWidget();\n        widget.setLabel('login');\n        widget.setStyleSheet('standard-button-width');\n        this.iTextBoxPassword.getWidget().setType('password');\n        widget.onClick(this.handleLogin);\n    }\n\n    componentDidUpdate(prevProps: Readonly<StateProps>, prevState: Readonly<DispatchProps>, snapshot?: any): void {\n\n    }\n\n    handleLogin = () => {\n        const username = this.iTextBoxUseName.getWidget().getValue();\n        const password = this.iTextBoxPassword.getWidget().getValue();\n        this.props.login({username: username, password: password, rememberMe: false});\n    };\n\n    render() {\n        const {location} = this.props;\n        const {from} = location.state || {from: {pathname: '/repository-search', search: location.search}};\n        if (this.props.authenticationState.isAuthenticated) {\n            this.props.mainOperations.toastAction.showToast('You are welcome to our game center!');\n            return <Redirect to={from} />;\n        }\n        return (\n            <div className=\"login-page-form\" style={{height: '180px', width: '323px'}}>\n                <div className=\"row login-form-input-row\">\n                    <Col md={\"12\"}>\n                        <div className=\"login-form-input\" style={{display: 'flex'}}>\n                            <label className=\"login-label-style\">UserName :</label>\n                            <CustomWidgetInputElement width={'300px'}\n                                                      widgetProp={this.iTextBoxUseName}/>\n                        </div>\n                        <div className=\"login-form-input\" style={{display: 'flex'}}>\n                            <label className=\"login-label-style\">Password :</label>\n                            <CustomWidgetInputElement width={'300px'}\n                                                      widgetProp={this.iTextBoxPassword}/>\n                        </div>\n                    </Col>\n                    <div id={this.warningElementID}/>\n                    <div className=\"col-md-12\" style={{direction: \"rtl\"}}>\n                        <CustomWidgetButtonElement width={'120px'} widgetProp={this.iButtonSubmit}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({authenticationState,mainOperations}: IRootState) => ({\n    authenticationState,\n    mainOperations\n});\n\nconst mapDispatchToProps = {login};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginPage);\n","export const resetIfNotAthenticated = (props: any) => {\n    if (props.authenticationState===undefined || !props.authenticationState.isAuthenticated) {\n        props.history.push('/');\n    }\n};","import React, {Component} from 'react';\nimport {Dialog, AnimationSettingsModel, BeforeCloseEventArgs} from '@syncfusion/ej2-popups';\nimport {EmitType} from '@syncfusion/ej2-base';\nimport {IWidgetCommon} from \"../common/common\";\nimport UniqueID from \"../../utils/uniqueKey\";\n\nexport interface IWindowWidget {\n    widget?: CustomWidgetWindowElement;\n}\n\nexport interface IDirectionWindowAction {\n    showWindow(data: any, type: any): boolean;\n\n    close(event: Function): boolean;\n}\n\ninterface IState {\n    windowWidget: IWindowWidget;\n    settleElementID: string;\n    width: number;\n    height: number;\n}\n\nexport class CustomWidgetWindowElement extends Component<IState> implements IWidgetCommon<Dialog> {\n    dialog: Dialog;\n    windowID: string;\n\n    getLabel(): string {\n        return '';\n    }\n\n    setLabel(label: string) {\n    }\n\n    constructor(prop: any) {\n        super(prop);\n        this.dialog = new Dialog();\n        this.dialog.isModal = true;\n        this.dialog.showCloseIcon = true;\n        this.dialog.allowDragging = true;\n        this.windowID = UniqueID();\n        this.dialog.width = this.props.width;\n        this.dialog.height = this.props.height;\n        this.dialog.visible = false;\n        this.props.windowWidget.widget = this;\n\n        this.setPosition('center', 'center');\n        this.setAnimationSettings({effect: 'None', duration: 100});\n    }\n\n    getMainElement() {\n        return this.dialog.element;\n    }\n\n    close() {\n        this.dialog.hide();\n    }\n\n    setModal(isModal = true): void {\n        this.dialog.isModal = isModal;\n    }\n\n    setAnimationSettings(props: AnimationSettingsModel) {\n        this.dialog.animationSettings = props;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.dialog.appendTo(element);\n            } else {\n                this.dialog.appendTo('#' + element);\n            }\n        }\n    }\n\n    showCloseIcon(showCloseIcon = true) {\n        this.dialog.showCloseIcon = showCloseIcon;\n    }\n\n    setCloseEvent(beforeClose: EmitType<BeforeCloseEventArgs>) {\n        this.dialog.beforeClose = beforeClose;\n    }\n\n    setTargetElement(target: string | HTMLElement = '#app-view-container') {\n        this.dialog.target = target;\n    }\n\n    destroy(): void {\n        this.dialog.destroy();\n    }\n\n    getWidget(): any {\n        return this.dialog;\n    }\n\n    showDialog(): void {\n        if (this.dialog.element === undefined) {\n            this.setTargetElement('#' + this.props.settleElementID);\n            this.createWidget(this.windowID);\n        }\n        document.getElementById(this.windowID).style.display = '';\n        this.dialog.show(true);\n    }\n\n    setHeight(height: number | string) {\n        this.dialog.height = height;\n    }\n\n    refresh() {\n        this.dialog.refresh();\n    }\n\n    dataBind() {\n        this.dialog.dataBind();\n    }\n\n    setWidth(width: number | string) {\n        this.dialog.width = width;\n    }\n\n    allowDragging(allowDragging = true): void {\n        this.dialog.allowDragging = allowDragging;\n    }\n\n    closeOnEscape(closeOnEscape = true): void {\n        this.dialog.closeOnEscape = closeOnEscape;\n    }\n\n    enableResize(enableResize = true): void {\n        this.dialog.enableResize = enableResize;\n    }\n\n    setContent(content: string | HTMLElement): void {\n        this.dialog.content = content;\n    }\n\n    setHeaderTitle(header: string | HTMLElement): void {\n        if (header instanceof HTMLElement) {\n            this.dialog.header = header;\n        }\n        this.dialog.header = '<span style=\"font-size: 13px;color: #1f194e;width: calc(100% - 10px);text-align: end;\">' + header + '</span>';\n    }\n\n    setPosition(x = 'center', y = 'center'): void {\n        this.dialog.position = {X: x, Y: y};\n    }\n\n    render() {\n        return (\n            <div style={{display: 'none'}} id={this.windowID}>\n                {this.props.children}\n            </div>);\n    }\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n    }\n\n    setWidgetDirection(isRtl: boolean): void {\n    }\n}\n","import {\n  ContextMenu,\n  Resize,\n  Grid,\n  Filter,\n  Page,\n  Selection,\n  Edit,\n  Toolbar,\n  // ToolbarItems,\n  CommandColumn,\n  Sort,\n  DetailRow,\n  ExcelExport,\n  PdfExport,\n  Group,\n  SearchEventArgs,\n  FilterEventArgs,\n  GroupEventArgs,\n  PageEventArgs,\n  ActionEventArgs,\n  EditEventArgs,\n  DeleteEventArgs,\n  SaveEventArgs,\n  AddEventArgs,\n  SortEventArgs,\n  Column,\n  ColumnModel,\n  TextWrapSettingsModel,\n  RowSelectEventArgs,\n  EditMode,\n  ToolbarItems,\n  ToolbarItem,\n  NewRowPosition,\n  PageSettingsModel,\n  CellSaveArgs, FilterSettingsModel\n} from '@syncfusion/ej2-grids';\nimport {  EmitType } from '@syncfusion/ej2-base';\nimport { ItemModel } from '@syncfusion/ej2-navigations';\nimport {IWidgetCommon} from \"../common/common\";\nimport {CheckUserPermissionOnControl} from \"../../utils/permission\";\n\nGrid.Inject(ContextMenu, Resize, Filter, Page, Selection, Toolbar, CommandColumn, Sort, DetailRow, ExcelExport, PdfExport, Group, Edit);\n\n\nexport class CustomGridview implements IWidgetCommon<Grid> {\n  private grid: Grid;\n  private rowItem: any;\n  private isAuthenticated: boolean;\n\n  applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n    const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n    this.isAuthenticated = isAuthenticated;\n  }\n\n  constructor() {\n    this.grid = new Grid();\n    this.grid.rowSelected = (e: RowSelectEventArgs) => {\n      this.rowItem = e.data;\n    };\n    this.grid.gridLines = 'Both';\n    this.enableHover(true);\n    this.rowHeight(20);\n    this.grid.allowResizing = true;\n    this.grid.allowTextWrap = false;\n  }\n\n  removeSelectedRow() {\n    // this.grid.deleteRecord(this.getSelectedRowItem());\n    this.grid.dataSource = (this.grid.dataSource as []).filter(f => f !== this.getSelectedRowItem());\n    this.grid.dataBind();\n  }\n\n  selectedEvent(rowSelected: EmitType<RowSelectEventArgs>) {\n    this.grid.rowSelected = rowSelected;\n  }\n\n\n\n  getSelectedRowItem(): any {\n    return this.grid.getRowObjectFromUID(this.grid.getSelectedRows()[0].getAttribute('data-uid')).data as any;\n  }\n\n  allowTextWrap(allowTextWrap: boolean) {\n    this.grid.allowTextWrap = allowTextWrap;\n  }\n\n  textWrapSettings(textWrapSettings: TextWrapSettingsModel) {\n    this.grid.textWrapSettings = textWrapSettings;\n  }\n\n  getElement() {\n    return this.grid.element;\n  }\n\n  setDataSource(data: any): void {\n    this.grid.dataSource = data;\n  }\n\n  addOrUpdateRow(data: any, idName: string) {\n    const dataSource = this.getDataSource();\n    const filter = dataSource.filter((f:any) => f[idName] !== data[idName]);\n    filter.push(data);\n    this.setDataSource(filter);\n    this.dataBind();\n  }\n\n  onCellSaved(cellSaved: EmitType<CellSaveArgs>) {\n    this.grid.cellSaved = cellSaved;\n  }\n\n  getDataSource(): any {\n    return this.grid.dataSource;\n  }\n\n  getSelectedRows(): Element[] {\n    return this.grid.getSelectedRows();\n  }\n\n  onSelect(rowSelected: EmitType<RowSelectEventArgs>) {\n    this.grid.rowSelected = rowSelected;\n  }\n\n  onActionComplete(actionComplete: EmitType<PageEventArgs |\n    GroupEventArgs |\n    FilterEventArgs |\n    SearchEventArgs |\n    SortEventArgs |\n    AddEventArgs |\n    SaveEventArgs |\n    EditEventArgs |\n    DeleteEventArgs |\n    ActionEventArgs>) {\n    this.grid.actionComplete = actionComplete;\n  }\n\n  allowPaging(allowPaging: boolean): void {\n    this.grid.allowPaging = allowPaging;\n  }\n\n  allowGrouping(allowGrouping: boolean): void {\n    this.grid.allowGrouping = allowGrouping;\n  }\n\n  actionBegin(actionBegin: EmitType<PageEventArgs |\n    GroupEventArgs |\n    FilterEventArgs |\n    SearchEventArgs |\n    SortEventArgs |\n    AddEventArgs |\n    SaveEventArgs |\n    EditEventArgs |\n    DeleteEventArgs |\n    ActionEventArgs>) {\n    this.grid.actionBegin = actionBegin;\n  }\n\n  allowReordering(allowReordering: boolean): void {\n    this.grid.allowReordering = allowReordering;\n  }\n\n  allowFiltering(allowFiltering: boolean): void {\n    this.grid.allowFiltering = allowFiltering;\n  }\n\n  allowSorting(allowSorting: boolean): void {\n    this.grid.allowSorting = allowSorting;\n  }\n\n  allowExcelExport(allowExcelExport: boolean): void {\n    this.grid.allowExcelExport = allowExcelExport;\n  }\n\n  allowPdfExport(allowPdfExport: boolean): void {\n    this.grid.allowPdfExport = allowPdfExport;\n  }\n\n  editSettings(allowEditing?: boolean, allowAdding?: boolean, allowDeleting?: boolean, mode?: EditMode, newRowPosition?: NewRowPosition, editTemplate?: string): void {\n    if (allowEditing || allowAdding || allowDeleting) {\n      Grid.Inject(Edit, Toolbar);\n    }\n    this.grid.editSettings.template = editTemplate;\n    this.grid.editSettings.allowEditing = allowEditing;\n    this.grid.editSettings.allowAdding = allowAdding;\n    this.grid.editSettings.allowDeleting = allowDeleting;\n    this.grid.editSettings.newRowPosition = newRowPosition;\n    this.grid.editSettings.mode = mode;\n  }\n\n  showDeleteConfirmDialog(showDeleteConfirmDialog: boolean): void {\n    this.grid.editSettings.showDeleteConfirmDialog = showDeleteConfirmDialog;\n  }\n\n  setGridLine(gridLine: any) {\n    this.grid.gridLines = gridLine;\n  }\n\n  allowEditOnDblClick(allowEditOnDblClick: boolean): void {\n    this.grid.editSettings.allowEditOnDblClick = allowEditOnDblClick;\n  }\n\n  allowNextRowEdit(allowNextRowEdit: boolean): void {\n    this.grid.editSettings.allowNextRowEdit = allowNextRowEdit;\n  }\n\n  enableHover(enableHover: boolean): void {\n    this.grid.enableHover = enableHover;\n  }\n\n  newRowPosition(newRowPosition: any): void {\n    this.grid.editSettings.newRowPosition = newRowPosition;\n  }\n\n  showConfirmDialog(showConfirmDialog: boolean): void {\n    this.grid.editSettings.showConfirmDialog = showConfirmDialog;\n  }\n\n  editTemplate(template: any): void {\n    this.grid.editSettings.template = template;\n  }\n\n  enableRowHovering(isHover: boolean) {\n    this.grid.enableHover = isHover;\n  }\n\n  contextMenuItems(contextMenuItems: any): void {\n    // ['AutoFit', 'AutoFitAll', 'SortAscending', 'SortDescending','Cancel', 'Copy', 'Edit', 'Delete', 'Save',\n    // 'Cancel','PdfExport', 'ExcelExport', 'CsvExport', 'FirstPage', 'PrevPage','LastPage', 'NextPage']\n    this.grid.contextMenuItems = contextMenuItems;\n  }\n\n  addToolbar(toolbar: Array<(ToolbarItems | string | ItemModel | ToolbarItem)>): void {\n    //  toolbar: [ 'Add', 'Edit', 'Delete', 'Update', 'Cancel', 'ExcelExport', 'Search','PdfExport'],\n    this.grid.toolbar = toolbar;\n  }\n\n  enableColumnVirtualization(enableVirtualization: boolean) {\n    this.grid.enableColumnVirtualization = enableVirtualization;\n  }\n\n  enableVirtualization(enableVirtualization: boolean): void {\n    this.grid.enableVirtualization = enableVirtualization;\n  }\n\n  filterSettings(filterSettings: FilterSettingsModel): void {\n    this.grid.filterSettings = filterSettings;\n  }\n\n  selectionSettings(persistSelection?: boolean, type?: any, checkboxOnly?: boolean, cellSelectionMode?: any, checkboxMode?: any,\n                    enableSimpleMultiRowSelection?: any, enableToggle?: any, mode?: any): void {\n    this.grid.selectionSettings.persistSelection = persistSelection;\n    this.grid.selectionSettings.type = type;\n    this.grid.selectionSettings.checkboxOnly = checkboxOnly;\n    this.grid.selectionSettings.cellSelectionMode = cellSelectionMode;\n    this.grid.selectionSettings.checkboxMode = checkboxMode;\n    this.grid.selectionSettings.enableSimpleMultiRowSelection = enableSimpleMultiRowSelection;\n    this.grid.selectionSettings.enableToggle = enableToggle;\n    this.grid.selectionSettings.mode = mode;\n  }\n\n  rowHeight(rowHeight: number): void {\n    this.grid.rowHeight = rowHeight;\n  }\n\n  pageSettings(pageSettings: PageSettingsModel): void {\n    this.grid.pageSettings = pageSettings;\n  }\n\n  getPageSettings(): PageSettingsModel {\n    return this.grid.pageSettings;\n  }\n\n  columns(columns: Column[] | string[] | ColumnModel[]): void {\n    this.grid.columns = columns;\n  }\n\n  setColumnHeaderText(columns: Column[] | string[] | ColumnModel[]) {\n    columns.forEach((a:any) => {\n      const col = a as ColumnModel;\n      this.grid.getColumnByField(col.field).headerText = col.headerText;\n    });\n    try {\n      this.grid.refreshHeader();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  actionComplete(actionComplete: any): void {\n    this.grid.actionComplete = actionComplete;\n  }\n\n  createWidget(element: any): void {\n    if (element !== undefined) {\n      if (element instanceof HTMLElement) {\n        this.grid.appendTo(element);\n      } else {\n        this.grid.appendTo('#' + element);\n      }\n    }\n  }\n\n  destroy(): void {\n    this.grid.destroy();\n  }\n\n  getWidget(): Grid {\n    return this.grid;\n  }\n\n  setHeight(height: number | string) {\n    this.grid.height = height;\n  }\n\n  setWidth(width: number) {\n    this.grid.width = width;\n  }\n\n  dataBind(): void {\n    try {\n      this.grid.dataReady();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  refresh(): void {\n    this.grid.refresh();\n  }\n\n  enableAltRow(enableAltRow: boolean): void {\n    this.grid.enableAltRow = enableAltRow;\n  }\n\n  getLabel(): string {\n    return '';\n  }\n\n  setLabel(label: string) {\n  }\n\n  private setDisability(b: boolean) {\n  }\n\n  setWidgetDirection(isRtl: boolean): void {\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport {CustomGridview} from \"./CustomGridview\";\nimport {CustomWidgetCommon} from \"../common/common\";\nimport UniqueID from \"../../utils/uniqueKey\";\n\nexport class CustomGridViewElement extends CustomWidgetCommon<CustomGridview> {\n  gridview: CustomGridview;\n  attrs: CSSProperties;\n\n  constructor(prop:any) {\n    super(prop);\n    this.gridview = new CustomGridview();\n    this.widget = this.gridview;\n    this.widgetID = UniqueID();\n    this.widgetPanelID = UniqueID();\n    this.initialProps(this.props.widgetProp);\n    this.attrs = { width: this.props.width, height: this.height, display: 'flex', fontSize: this.fontSize };\n  }\n\n  componentDidMount(): void {\n    this.widget.createWidget(this.widgetID);\n  }\n\n  render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n    return (\n      <div id={this.widgetPanelID} style={this.attrs}>\n        <label/>\n        <div style={{ padding: '0 4px 0' }}>\n          <div style={{ height: this.height, fontSize: this.fontSize, padding: '0' }} id={this.widgetID}/>\n        </div>\n      </div>);\n  }\n\n  destroy(): void {\n    this.widget.destroy();\n  }\n}\n","import {IWidgetCommon} from \"../common/common\";\n\nexport class LoadingBar implements IWidgetCommon<HTMLElement> {\n  bodyElement: HTMLElement;\n  loadingElement: HTMLElement;\n  loadingContainerElement: HTMLElement;\n  showStyle = 'width:100%;height:100%;opacity:.5;background-color:skyblue;z-index:1;position:absolute;top:0px;';\n  hideStyle = 'width:0px;height:0px;display:none;';\n\n  constructor(element?: string | HTMLElement) {\n    this.bodyElement = document.createElement('div');\n    this.loadingElement = document.createElement('div');\n    this.loadingContainerElement = document.createElement('div');\n\n    this.loadingContainerElement.appendChild(this.loadingElement);\n    this.bodyElement.appendChild(this.loadingContainerElement);\n    if (element !== undefined) {\n      if (element instanceof HTMLElement) {\n        element.append(this.bodyElement);\n      } else {\n        document.getElementById(element).append(this.bodyElement);\n      }\n    }\n    this.hideLoading();\n    this.loadingContainerElement.setAttribute('class', 'load-container load8');\n    this.loadingContainerElement.setAttribute('style', 'margin:200px auto;');\n    this.loadingElement.setAttribute('class', 'loader');\n  }\n\n  hideLoading() {\n    this.bodyElement.setAttribute('style', this.hideStyle);\n  }\n\n  showLoading() {\n    this.bodyElement.setAttribute('style', this.showStyle);\n  }\n\n  createWidget(element: any): void {\n  }\n\n  destroy(): void {\n  }\n\n  getLabel(): string {\n    return \"\";\n  }\n\n  getWidget(): HTMLElement {\n    return undefined;\n  }\n\n  setHeight(height: number | string) {\n  }\n\n  setLabel(label: string) {\n  }\n\n  setWidgetDirection(isRtl: boolean): void {\n  }\n\n  setWidth(width: number | string) {\n  }\n\n  applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n  }\n\n}\n","import {PivotView} from '@syncfusion/ej2-pivotview';\nimport {\n    Grid,\n    Edit,\n    Toolbar,\n    RowSelectEventArgs,\n    EditMode,\n    NewRowPosition,\n} from '@syncfusion/ej2-grids';\nimport {EmitType} from '@syncfusion/ej2-base';\nimport {IWidgetCommon} from \"../common/common\";\nimport {CheckUserPermissionOnControl} from \"../../utils/permission\";\nimport {DataSourceSettingsModel} from \"@syncfusion/ej2-pivotview/src/pivotview/model/datasourcesettings-model\";\n\nexport class CustomPivotGrid implements IWidgetCommon<PivotView> {\n    private pivotView: PivotView;\n    private isAuthenticated: boolean;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        this.isAuthenticated = isAuthenticated;\n    }\n\n    constructor() {\n        this.pivotView = new PivotView();\n    }\n\n    selectedEvent(rowSelected: EmitType<RowSelectEventArgs>) {\n        this.pivotView.rowSelected = rowSelected;\n    }\n\n\n    getElement() {\n        return this.pivotView.element;\n    }\n\n    setDataSource(data: any): void {\n        this.pivotView.dataSourceSettings.dataSource = data;\n    }\n\n    addOrUpdateRow(data: any, idName: string) {\n        const dataSource = this.getDataSource();\n        const filter = dataSource.filter((f: any) => f[idName] !== data[idName]);\n        filter.push(data);\n        this.setDataSource(filter);\n        this.dataBind();\n    }\n\n    getDataSourceSettings(): DataSourceSettingsModel {\n        return this.pivotView.dataSourceSettings;\n    }\n\n    getDataSource(): any {\n        return this.pivotView.dataSourceSettings.dataSource;\n    }\n\n    onSelect(rowSelected: EmitType<RowSelectEventArgs>) {\n        this.pivotView.rowSelected = rowSelected;\n    }\n\n\n    allowGrouping(allowGrouping: boolean): void {\n        this.pivotView.allowGrouping = allowGrouping;\n    }\n\n    allowExcelExport(allowExcelExport: boolean): void {\n        this.pivotView.allowExcelExport = allowExcelExport;\n    }\n\n    allowPdfExport(allowPdfExport: boolean): void {\n        this.pivotView.allowPdfExport = allowPdfExport;\n    }\n\n    editSettings(allowEditing?: boolean, allowAdding?: boolean, allowDeleting?: boolean, mode?: EditMode, newRowPosition?: NewRowPosition, editTemplate?: string): void {\n        if (allowEditing || allowAdding || allowDeleting) {\n            Grid.Inject(Edit, Toolbar);\n        }\n        this.pivotView.editSettings.allowEditing = allowEditing;\n        this.pivotView.editSettings.allowAdding = allowAdding;\n        this.pivotView.editSettings.allowDeleting = allowDeleting;\n        this.pivotView.editSettings.mode = mode;\n    }\n\n    showDeleteConfirmDialog(showDeleteConfirmDialog: boolean): void {\n        this.pivotView.editSettings.showDeleteConfirmDialog = showDeleteConfirmDialog;\n    }\n\n    allowEditOnDblClick(allowEditOnDblClick: boolean): void {\n        this.pivotView.editSettings.allowEditOnDblClick = allowEditOnDblClick;\n    }\n\n    showConfirmDialog(showConfirmDialog: boolean): void {\n        this.pivotView.editSettings.showConfirmDialog = showConfirmDialog;\n    }\n\n\n    enableVirtualization(enableVirtualization: boolean): void {\n        this.pivotView.enableVirtualization = enableVirtualization;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.pivotView.appendTo(element);\n            } else {\n                this.pivotView.appendTo('#' + element);\n            }\n        }\n    }\n\n    destroy(): void {\n        this.pivotView.destroy();\n    }\n\n    getWidget() {\n        return this.pivotView;\n    }\n\n    setHeight(height: number | string) {\n        this.pivotView.height = height;\n    }\n\n    setWidth(width: string | number) {\n        this.pivotView.width = width;\n    }\n\n    dataBind(): void {\n        this.pivotView.dataBind();\n    }\n\n    refresh(): void {\n        this.pivotView.refresh();\n    }\n\n    getLabel(): string {\n        return '';\n    }\n\n    setLabel(label: string) {\n    }\n\n    private setDisability(b: boolean) {\n    }\n\n    setWidgetDirection(isRtl: boolean): void {\n    }\n}\n","import React, {CSSProperties} from 'react';\nimport {CustomPivotGrid} from \"./CustomPivotGrid\";\nimport {CustomWidgetCommon} from \"../common/common\";\nimport UniqueID from \"../../utils/uniqueKey\";\n\nexport class CustomPivotGridElement extends CustomWidgetCommon<CustomPivotGrid> {\n    pivotGrid: CustomPivotGrid;\n    attrs: CSSProperties;\n\n    constructor(prop: any) {\n        super(prop);\n        this.pivotGrid = new CustomPivotGrid();\n        this.widget = this.pivotGrid;\n        this.widgetID = UniqueID();\n        this.widgetPanelID = UniqueID();\n        this.initialProps(this.props.widgetProp);\n    }\n\n    componentDidMount(): void {\n        this.widget.createWidget(this.widgetID);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"control-section\"  style={{height: '100%', width: '100%'}}>\n                <div id={this.widgetPanelID} className=\"content-wrapper\" style={{height: '100%', width: '100%'}}>\n                    <div id={this.widgetID} />\n                </div>\n            </div>\n        );\n    }\n\n    destroy(): void {\n        this.widget.destroy();\n    }\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport '../contents/styles/rps-game-page.css';\nimport {\n    CustomWidgetWindowElement,\n    IDirectionWindowAction,\n    IWindowWidget\n} from \"../../../shared/widgets/window/CustomWidgetWindowElement\";\nimport {resetIfNotAthenticated} from \"../service/restart-service\";\nimport {IRootState} from \"../../../shared/reducer\";\nimport {fetchCommitList} from \"../reducer/github-reducer\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {CustomGridViewElement} from \"../../../shared/widgets/gridview/custom-gridView-element\";\nimport {CustomGridview} from \"../../../shared/widgets/gridview/CustomGridview\";\nimport {IWidgetOps} from \"../../../shared/widgets/common/common\";\nimport {LoadingBar} from \"../../../shared/widgets/spinner/LoadingBar\";\nimport {CustomPivotGridElement} from \"../../../shared/widgets/pivot/custom-pivot-grid-element\";\nimport {CustomPivotGrid} from \"../../../shared/widgets/pivot/CustomPivotGrid\";\nimport {CustomStockChartElement} from \"../../../shared/widgets/stockChart/custom-stock-chart-element\";\nimport {CustomWidgetStockChart} from \"../../../shared/widgets/stockChart/custom-widget-stock-chart\";\nimport {CustomWidgetChartElement} from \"../../../shared/widgets/charts/custom-widget-chart-element\";\nimport {CustomWidgetChart} from \"../../../shared/widgets/charts/custom-widget-chart\";\n\n\nexport interface WindowPropModel {\n    panelID?: string;\n    repositoryID?: string;\n\n    show?(data: any): void;\n}\n\ninterface IProps extends StateProps, DispatchProps {\n    windowProp: WindowPropModel\n}\n\nclass RepositorySearchResult extends React.Component<IProps> implements IDirectionWindowAction {\n    private _windowContributor: IWindowWidget = {};\n    private repositoryUrl = '';\n    private commitGrid: IWidgetOps<CustomGridview> = {};\n    private loadingBar: LoadingBar;\n    private pivotGrid: IWidgetOps<CustomPivotGrid> = {};\n    private chart: IWidgetOps<CustomWidgetChart> = {};\n\n    showWindow(): boolean {\n        this.loadingBar.showLoading();\n        this.props.fetchContributorList(this.repositoryUrl, this.props.windowProp.repositoryID);\n        return true;\n    }\n\n    close(event: Function): boolean {\n        return true;\n    }\n\n    constructor(props: any) {\n        super(props);\n        resetIfNotAthenticated(props);\n        this.props.windowProp.show = (url) => {\n            this.repositoryUrl = url;\n            this.showWindow()\n        }\n    }\n\n    componentDidMount(): void {\n        this.loadingBar = new LoadingBar(this.props.windowProp.panelID);\n        const pivot = this.pivotGrid.getWidget();\n        pivot.setWidth('800px');\n        pivot.setHeight('100%');\n        pivot.getWidget().gridSettings.columnWidth = 190;\n      //  this.configStockChart();\n        const grid = this.commitGrid.getWidget();\n        grid.columns([\n            {field: 'name'},\n            {field: 'email', width: 300},\n            {field: 'date', width: 300, type: 'date'},\n            {field: 'count'}\n        ]);\n\n    }\n\n\n    componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        const commitsReducer = this.props.githubStateType.commitReducer;\n        if (commitsReducer !== prevProps.githubStateType.commitReducer &&\n            commitsReducer.repositoryID === this.props.windowProp.repositoryID) {\n            const data = commitsReducer.detailDtos.map(m => ({...m, date: new Date(m['date'])}));\n            this.configPivotGrid(data);\n            this.loadingBar.hideLoading();\n         //   this.setChartSeries(data);\n            this.commitGrid.getWidget().setDataSource(data);\n            this._windowContributor.widget.showDialog();\n        }\n    }\n\n    private configPivotGrid(detailDtos: any[]) {\n        const dataSourceSettings = this.pivotGrid.getWidget().getDataSourceSettings();\n        dataSourceSettings.enableSorting = true;\n        dataSourceSettings.columns = [{name: 'date', showSubTotals: true}];\n        dataSourceSettings.values = [{name: 'count', type: 'Count'}];\n        dataSourceSettings.rows = [{name: 'name', showSubTotals: true}];\n        dataSourceSettings.expandAll = false;\n        dataSourceSettings.filters = [];\n        dataSourceSettings.dataSource = detailDtos;\n        this.pivotGrid.getWidget().dataBind();\n    }\n\n    private configStockChart() {\n        const chart = this.chart.getWidget();\n        chart.setprimaryXAxis({\n            valueType: 'DateTime',\n            labelFormat: 'y',\n            intervalType: \"Hours\",\n            edgeLabelPlacement: \"Shift\",\n            majorGridLines: {width: 0}\n        });\n        chart.setprimaryYAxis({\n            labelFormat: '{value}%',\n            rangePadding: 'None',\n            minimum: 0,\n            maximum: 100,\n            interval: 20,\n            lineStyle: {width: 0},\n            majorTickLines: {width: 0},\n            minorTickLines: {width: 0}\n        });\n        chart.setChartArea({\n            border: {\n                width: 0\n            }\n        });\n        chart.setTitle('timeline');\n        chart.setTooltip({enable: true});\n        chart.setWidth('100%');\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <CustomWidgetWindowElement windowWidget={this._windowContributor}\n                                       settleElementID={this.props.windowProp.panelID}\n                                       width={800}\n                                       height={600}>\n                <Row>\n                    <Col md={5}><CustomGridViewElement widgetProp={this.commitGrid}/></Col>\n                    <Col md={7}><CustomPivotGridElement widgetProp={this.pivotGrid}/></Col>\n                </Row>\n                {/*<Row>*/}\n                {/*    <CustomWidgetChartElement width={'100%'} widgetProp={this.chart}/>*/}\n                {/*</Row>*/}\n            </CustomWidgetWindowElement>);\n    }\n\n    private setChartSeries(data: { date: Date; name: string; count: string; email: string }[]) {\n        const chartSeries = data.map(m => ({x: m.date, y: m.count}));\n        this.chart.getWidget().setseries([{\n            type: 'Line',\n            dataSource: chartSeries,\n            xName: 'x', width: 2, marker: {\n                visible: true,\n                width: 10,\n                height: 10\n            },\n            yName: 'y', name: 'timeline',\n        }]);\n        this.chart.getWidget().getWidget().refresh();\n    }\n}\n\nconst mapStateToProps = ({githubStateType, mainOperations, authenticationState}: IRootState) => ({\n    authenticationState,\n    mainOperations,\n    githubStateType\n});\n\nconst mapDispatchToProps = {\n    fetchContributorList: fetchCommitList\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RepositorySearchResult);","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {RepositoryItemModel} from \"../models/repository-item-model\";\nimport RepositorySearchResult, {WindowPropModel} from \"../window/repository-search-result\";\nimport UniqueID from \"../../../shared/utils/uniqueKey\";\nimport {CustomWidgetButtonElement} from \"../../../shared/widgets/button/CustomWidgetButtonElement\";\nimport {IWidgetOps} from \"../../../shared/widgets/common/common\";\nimport {CustomWidgetButton} from \"../../../shared/widgets/button/CustomWidgetButton\";\nimport {repositoryIcon} from \"../contents/icon-string\";\n\ninterface IProps extends StateProps, DispatchProps {\n    repositoryItem: RepositoryItemModel;\n}\n\n\nclass RepositoryResultPanel extends React.Component<IProps> {\n    private windowProp: WindowPropModel = {};\n    private repositoryButton: IWidgetOps<CustomWidgetButton> = {};\n\n    constructor(props: any) {\n        super(props);\n        this.windowProp.panelID = 'root';\n        this.windowProp.repositoryID = UniqueID()\n    }\n\n    componentDidMount(): void {\n        this.repositoryButton.getWidget().setLabel(repositoryIcon + ' repository')\n        this.repositoryButton.getWidget().onClick(() => {\n            this.selectContributor(this.props.repositoryItem.full_name);\n        });\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        const repository = this.props.repositoryItem;\n        return (<li className=\"e-card\">\n                <Row><img src=\"\" alt=\"\"/><a\n                    href={repository.html_url}>{repository.full_name}</a></Row>\n                <Row><h6>{repository.name}</h6></Row>\n                <Row><p style={{color: \"gray\", maxWidth: '90%'}}>{repository.description}</p></Row>\n                <Row>\n                    <Col md={2}>\n                        <span className=\"repo-language-color\" style={{backgroundColor: '#b07219'}}/>\n                        <label className=\"repo-text-with-icon\">{repository.language}</label>\n                    </Col>\n                    <Col md={2}>\n                        <svg aria-label=\"star\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" role=\"img\">\n                            <path  d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"/>\n                        </svg>\n                        <a href={repository.stargazers_url} className=\"repo-text-with-icon\">\n                            {repository.stargazers_count}\n                        </a>\n                    </Col>\n                    <CustomWidgetButtonElement widgetProp={this.repositoryButton}/>\n                    <RepositorySearchResult windowProp={this.windowProp}/>\n                </Row>\n            </li>\n        );\n    }\n\n    private selectContributor(full_name: string) {\n        this.windowProp.show(full_name);\n    }\n}\n\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = {};\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RepositoryResultPanel);","import {Pager} from '@syncfusion/ej2-grids'\n\nimport {CheckUserPermissionOnControl} from \"../../../shared/utils/permission\";\nimport {IWidgetCommon} from \"../common/common\";\nimport {EmitType} from \"@syncfusion/ej2-base\";\n\nexport class CustomWidgetPager implements IWidgetCommon<Pager> {\n    private pager: Pager;\n    private translateLabel = '';\n    isAuthenticated = true;\n\n    getLabel(): string {\n        return '';\n    }\n\n    setLabel(label: string): void {\n\n    }\n\n    setPageSize(size: number) {\n        this.pager.pageSize = size;\n    }\n\n    setDropDownChanged(dropDownChanged: EmitType<Object>) {\n        this.pager.dropDownChanged = dropDownChanged;\n    }\n\n    setCurrentPage(pageNumber: number) {\n        this.pager.currentPage = pageNumber;\n    }\n\n    setPageCount(count: number) {\n        this.pager.pageCount = count;\n    }\n\n    setTotalRecordCount(totalRecord: number) {\n        this.pager.totalRecordsCount = totalRecord;\n    }\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        this.isAuthenticated = isAuthenticated;\n    }\n\n    constructor(element?: string | HTMLElement, label?: string, isRtl?: boolean) {\n        this.isAuthenticated = true;\n        this.pager = new Pager();\n        this.createWidget(element);\n        this.setWidgetDirection(isRtl);\n        this.setLabel(label);\n    }\n\n\n    setWidgetDirection(isRtl: any): void {\n        this.pager.enableRtl = isRtl;\n    }\n\n\n    setHeight(height: number) {\n    }\n\n    setWidth(width: number) {\n    }\n\n    destroy(): void {\n        this.pager.destroy();\n    }\n\n    getWidget() {\n        return this.pager;\n    }\n\n    getElement() {\n        return this.pager.element;\n    }\n\n    OnClick(click: EmitType<Object>) {\n        this.pager.click = click;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.pager.appendTo(element);\n            } else {\n                this.pager.appendTo('#' + element);\n            }\n        }\n    }\n\n    onClick(click: EmitType<Object>): void {\n        this.pager.click = click;\n    }\n\n    addEventListener(eventName: string, handler: Function) {\n        return this.pager.addEventListener(eventName, handler);\n    }\n\n    setHidden(isHidden: boolean) {\n        // TODO should be implemented after demo\n    }\n\n\n    setTranslateLink(translateLabel: string) {\n        this.translateLabel = translateLabel;\n    }\n\n    getTranslateLink() {\n        return this.translateLabel;\n    }\n\n}\n","import React from 'react';\nimport {CustomWidgetCommon} from \"../common/common\";\nimport {CustomWidgetPager} from \"./CustomWidgetPager\";\nimport UniqueID from \"../../utils/uniqueKey\";\n\n\nexport class CustomWidgetPagerElement extends CustomWidgetCommon<CustomWidgetPager> {\n\n    constructor(prop: any) {\n        super(prop);\n        this.widget = new CustomWidgetPager();\n        this.widgetID = UniqueID();\n        this.initialProps(this.props.widgetProp);\n    }\n\n\n    componentDidMount(): void {\n        this.widget.createWidget(this.widgetID);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div style={{width: this.props.width, height: this.height}} id={this.widgetPanelID}>\n                <div style={{height: this.height, fontSize: this.fontSize}} id={this.widgetID}/>\n            </div>);\n    }\n\n    destroy(): void {\n        this.widget.destroy();\n    }\n}\n","import {IWidgetCommon} from \"../common/common\";\nimport {DropDownList, ChangeEventArgs, FieldSettingsModel} from '@syncfusion/ej2-dropdowns';\nimport {EmitType} from '@syncfusion/ej2-base';\n\nimport {CheckUserPermissionOnControl} from \"../../../shared/utils/permission\";\nimport {FloatLabelType} from \"@syncfusion/ej2-inputs\";\n\nexport class CustomWidgetDropDown implements IWidgetCommon<DropDownList> {\n    private combobox: DropDownList;\n    permissionID = true;\n\n    applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n        const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n        if (!isAuthenticated) {\n            // this.setDisability(false);\n        }\n        this.permissionID = isAuthenticated;\n    }\n\n    constructor(element?: string | HTMLElement) {\n        this.combobox = new DropDownList();\n        this.createWidget(element);\n    }\n\n    setDataSource(dataSource: any) {\n        this.combobox.dataSource = dataSource;\n    }\n\n    setEnable(stat: boolean) {\n        this.combobox.enabled = stat;\n    }\n\n    getPlaceHolder() {\n        return this.combobox.placeholder;\n    }\n\n    setPlaceHolder(placeholder: string) {\n        this.combobox.placeholder = placeholder;\n    }\n\n    setFields(fields: FieldSettingsModel) {\n        this.combobox.fields = fields;\n    }\n\n    onChange(change: EmitType<ChangeEventArgs>) {\n        this.combobox.change = change;\n    }\n\n    getValue() {\n        return this.combobox.value === null ? '' : this.combobox.value;\n    }\n\n    getText(): string {\n        return (this.combobox.element as any).value;\n    }\n\n    setValue(value: any) {\n        this.combobox.value = value;\n    }\n\n    setItemTemplate(itemTemplate: string) {\n        this.combobox.itemTemplate = itemTemplate;\n    }\n\n    addItems(items: [] |\n        { [key: string]: {}; } |\n        string | boolean | number |\n        string[] | boolean[] |\n        number[], itemIndex?: number) {\n        this.combobox.addItem(items);\n    }\n\n    setIndex(index: number) {\n        this.combobox.index = index;\n    }\n\n    setWidgetDirection(isRtl: any): void {\n        this.combobox.enableRtl = isRtl;\n    }\n\n    getItem() {\n        return this.combobox.getItems();\n    }\n\n    setHeight(height: number) {\n    }\n\n    setWidth(width: number) {\n\n    }\n\n    destroy(): void {\n        this.combobox.destroy();\n    }\n\n    getWidget() {\n        return this.combobox;\n    }\n\n    setFloatLabelType(floatLabelType: FloatLabelType) {\n        this.combobox.floatLabelType = floatLabelType;\n    }\n\n    getElement() {\n        return this.combobox.element;\n    }\n\n    createWidget(element: any): void {\n        if (element !== undefined) {\n            if (element instanceof HTMLElement) {\n                this.combobox.appendTo(element);\n            } else {\n                this.combobox.appendTo('#' + element);\n            }\n\n        }\n        try {\n            if (this.combobox.element !== undefined) {\n                this.combobox.element.onclick = () => {\n                    this.combobox.showPopup();\n                };\n            }\n        } catch (e) {\n            console.log('test Combo', e);\n        }\n    }\n\n    getLabel(): string {\n        return this.combobox.placeholder;\n    }\n\n    setLabel(label: string) {\n        this.combobox.placeholder = label;\n    }\n}\n","import React from 'react';\nimport UniqueID from \"../../../shared/utils/uniqueKey\";\nimport {CustomWidgetCommon} from \"../common/common\";\nimport {CustomWidgetDropDown} from \"./CustomWidgetDropDown\";\n\nexport class CustomWidgetDropDownElement extends CustomWidgetCommon<CustomWidgetDropDown> {\n  combo: CustomWidgetDropDown;\n\n  constructor(prop:any) {\n    super(prop);\n    this.combo = new CustomWidgetDropDown();\n    this.widget = this.combo;\n    this.widgetID = UniqueID();\n    this.widgetPanelID = UniqueID();\n    this.initialProps(this.props.widgetProp);\n  }\n\n  componentDidMount(): void {\n    this.widget.createWidget(this.widgetID);\n  }\n\n  render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n    return (\n      <div id={this.widgetPanelID} style={{ width: this.props.width, height: this.height, display: 'flex', fontSize: this.fontSize }}>\n        <div style={{ padding: '0 7px 0' }}>\n          <input style={{ height: this.height, fontSize: this.fontSize, padding: '0' }} id={this.widgetID}/>\n        </div>\n      </div>);\n  }\n\n  destroy(): void {\n    this.widget.destroy();\n  }\n}\n","export const languageDatasource = [\n    {text: 'java', value: 'java'},\n    {text: 'CSharp', value: 'CSharp'},\n    {text: 'C', value: 'C'},\n    {text: 'C++', value: 'C++'},\n    {text: 'javascript', value: 'javascript'},\n    {text: 'python', value: 'python'},\n    {text: 'javascript', value: 'javascript'},\n];","import { ListBox, CheckBoxSelection, SelectionSettingsModel, ListBoxChangeEventArgs, FieldSettingsModel, SelectEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport {IWidgetCommon} from \"../common/common\";\nimport {CheckUserPermissionOnControl} from \"../../utils/permission\";\n\nListBox.Inject(CheckBoxSelection);\n\nexport class CustomListBox implements IWidgetCommon<ListBox> {\n  private listBox: ListBox;\n  private placeholder: string;\n  permissionID: boolean;\n\n  applyPermission(elementPermissionID: string, userPermissions: string[]): void {\n    const isAuthenticated: boolean = CheckUserPermissionOnControl(elementPermissionID, userPermissions);\n    if (!isAuthenticated) {\n     // this.setDisability(false);\n    }\n    this.permissionID = isAuthenticated;\n  }\n  constructor(element?: string | HTMLElement) {\n    this.listBox = new ListBox();\n    this.createWidget(element);\n  }\n\n  setWidgetDirection(isRtl: any): void {\n    this.listBox.enableRtl = isRtl;\n  }\n\n  setHeight(height: number) {\n    this.listBox.height = height;\n  }\n\n  setWidth(width: string) {\n    this.listBox.element.style.width=width;\n  }\n\n  setValue(value1: string[] | number[] | boolean[]) {\n    this.listBox.value = value1;\n  }\n\n  getValue(): string[] | number[] | boolean[] {\n    return this.listBox.value;\n  }\n\n  destroy(): void {\n    this.listBox.destroy();\n  }\n\n  getWidget() {\n    return this.listBox;\n  }\n\n  getItemTemplate(template:string) {\n    this.listBox.itemTemplate = template;\n  }\n\n  setFields(fields: FieldSettingsModel) {\n    this.listBox.fields = fields;\n  }\n\n  selectItems(items: string[], isSelecting?: boolean) {\n    this.listBox.selectItems(items, isSelecting);\n  }\n\n  setDataSource(data: any) {\n    this.listBox.dataSource = data;\n  }\n\n  setEnabled(stat: boolean) {\n    this.listBox.enabled = stat;\n  }\n\n  selectionEvent(select: EmitType<SelectEventArgs>) {\n    this.listBox.select = select;\n  }\n\n  ChangeEvent(change: EmitType<ListBoxChangeEventArgs>) {\n    this.listBox.change = change;\n  }\n\n  setTemplate(template: string) {\n    this.listBox.itemTemplate = template;\n  }\n\n  setChangeEvent(changeEventArgsEmitType: EmitType<ListBoxChangeEventArgs>) {\n    this.listBox.change = changeEventArgsEmitType;\n  }\n\n  addItems(items: any, itemIndex?: number) {\n    this.listBox.addItems(items, itemIndex);\n  }\n\n  selectionSettings(selectionSettingsModel: SelectionSettingsModel) {\n    this.listBox.selectionSettings = selectionSettingsModel;\n  }\n\n  getElement() {\n    return this.listBox.element;\n  }\n\n  createWidget(element: any): void {\n    if (element !== undefined) {\n      if (element instanceof HTMLElement) {\n        this.listBox.appendTo(element);\n      } else {\n        this.listBox.appendTo('#' + element);\n      }\n    }\n  }\n\n  getLabel(): string {\n    return '';\n  }\n\n  setLabel(label: string) {\n  }\n\n  getPlaceHolder() {\n    return this.placeholder;\n  }\n\n  setPlaceHolder(placeholder: string) {\n    this.placeholder = placeholder;\n  }\n}\n","import React from 'react';\nimport UniqueID from \"../../utils/uniqueKey\";\nimport {CustomWidgetCommon, IWidgetOps} from \"../common/common\";\nimport {CustomListBox} from \"./CustomListBox\";\n\nexport class CustomListBoxElement extends CustomWidgetCommon<CustomListBox> {\n  listBox: CustomListBox;\n\n  constructor(prop:any) {\n    super(prop);\n    this.listBox = new CustomListBox();\n    this.widget = this.listBox;\n    this.widgetID = UniqueID();\n    this.widgetPanelID = UniqueID();\n    this.initialProps(this.props.widgetProp);\n  }\n\n  initialProps(props: IWidgetOps<CustomListBox>) {\n    super.initialProps(props);\n  }\n\n  componentDidMount(): void {\n    this.widget.createWidget(this.widgetID);\n  }\n\n  render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n    return (\n      <div id={this.widgetPanelID} style={{ width: this.props.width, height: this.height, display: 'flex', fontSize: this.fontSize }}>\n          <div style={{ height: this.height, fontSize: this.fontSize, padding: '0' }} id={this.widgetID}/>\n      </div>);\n  }\n\n  destroy(): void {\n    this.widget.destroy();\n  }\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {resetIfNotAthenticated} from \"./service/restart-service\";\nimport {IRootState} from \"../../shared/reducer\";\nimport {CustomWidgetInputElement} from \"../../shared/widgets/textbox/CustomWidgetInputElement\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {CustomWidgetButtonElement} from \"../../shared/widgets/button/CustomWidgetButtonElement\";\nimport {IWidgetOps} from \"../../shared/widgets/common/common\";\nimport RepositoryPanel from \"./modules/repository-result-panel\";\nimport {CustomWidgetInput} from \"../../shared/widgets/textbox/CustomWidgetInput\";\nimport {CustomWidgetButton} from \"../../shared/widgets/button/CustomWidgetButton\";\nimport {fetchBookmarkList, fetchRepositoryList} from \"./reducer/github-reducer\";\nimport {CustomWidgetPagerElement} from \"../../shared/widgets/pager/CustomWidgetPagerElement\";\nimport {CustomWidgetPager} from \"../../shared/widgets/pager/CustomWidgetPager\";\nimport {CustomWidgetDropDownElement} from \"../../shared/widgets/dropDownBox/CustomWidgetDropDownElement\";\nimport {CustomWidgetDropDown} from \"../../shared/widgets/dropDownBox/CustomWidgetDropDown\";\nimport UniqueID from \"../../shared/utils/uniqueKey\";\nimport {languageDatasource} from \"./models/language-json-data\";\nimport {LoadingBar} from \"../../shared/widgets/spinner/LoadingBar\";\nimport {CustomListBoxElement} from \"../../shared/widgets/listbox/CustomListBoxElement\";\nimport {CustomListBox} from \"../../shared/widgets/listbox/CustomListBox\";\n\ninterface ICardInstituteProps extends StateProps, DispatchProps {\n    windowProp: { show?(data: any): void }\n}\n\nclass RepositorySearch extends React.Component<ICardInstituteProps> {\n    private repositorySearchInput: IWidgetOps<CustomWidgetInput> = {};\n    private repositorySearchButton: IWidgetOps<CustomWidgetButton> = {};\n    private languageList: IWidgetOps<CustomWidgetDropDown> = {};\n    private pager: IWidgetOps<CustomWidgetPager> = {};\n    private pageSize: IWidgetOps<CustomWidgetInput> = {};\n    private pageNumber: IWidgetOps<CustomWidgetInput> = {};\n    private pageId = UniqueID();\n    private loadingBar: LoadingBar;\n    private bookmarkList: IWidgetOps<CustomListBox> = {};\n\n\n    constructor(props: any) {\n        super(props);\n        resetIfNotAthenticated(props);\n    }\n\n    componentDidMount(): void {\n        this.initializeFields();\n    }\n\n    private initializeFields() {\n        this.loadingBar = new LoadingBar(this.pageId);\n\n        const searchInput = this.repositorySearchInput.getWidget();\n        searchInput.setWidth('100%');\n\n        this.initialLeftField();\n\n        const pager = this.pager.getWidget();\n        pager.onClick(((a: any) => {\n            this.searchRepository(a['currentPage']);\n        }));\n\n        this.initializeSearchButton();\n    }\n\n    private initialLeftField() {\n        const pageNumber = this.pageNumber.getWidget();\n        pageNumber.setType('number');\n        pageNumber.setValue('1');\n        pageNumber.setLabel('Page number:');\n\n        const pageSizeInput = this.pageSize.getWidget();\n        pageSizeInput.setType('number');\n        pageSizeInput.setValue('10');\n        pageSizeInput.setLabel('Page size:');\n\n        const languageDropDown = this.languageList.getWidget();\n        languageDropDown.setDataSource(languageDatasource);\n        languageDropDown.setFloatLabelType(\"Always\");\n        languageDropDown.setLabel('language :');\n        languageDropDown.setIndex(0);\n\n        const bookmarkList = this.bookmarkList.getWidget();\n        bookmarkList.setWidth('100%');\n        bookmarkList.setHeight(200);\n    }\n\n    searchRepository(pageNumber: number) {\n        const searchInput = this.repositorySearchInput.getWidget();\n        const value = searchInput.getValue();\n        if (value.length > 0) {\n            this.loadingBar.showLoading();\n            this.props.fetchRepositoryList({\n                requestValue: value,\n                page: pageNumber,\n                pageSize: parseInt(this.pageSize.getWidget().getValue(), 0),\n                language: this.languageList.getWidget().getValue().toString(),\n                sort: 'stars'\n            });\n        } else\n            this.props.mainOperations.toastAction.showToast('please fill the search input!');\n    }\n\n    private initializeSearchButton() {\n        this.repositorySearchButton.getWidget().onClick(() => {\n            const pageNumber = parseInt(this.pageNumber.getWidget().getValue(), 0);\n            this.searchRepository(pageNumber);\n        });\n        this.repositorySearchButton.getWidget().setLabel('search');\n    }\n\n    private setPager(repositoryReducer: any) {\n        const pageSize = parseInt(this.pageSize.getWidget().getValue(), 0);\n        let totalCount = repositoryReducer.total_count;\n        if (totalCount > 1000) {\n            totalCount = 1000;\n        }\n        this.pager.getWidget().setTotalRecordCount(totalCount);\n        this.pager.getWidget().setPageSize(pageSize);\n\n    }\n\n    render() {\n        const result = this.props.githubStateType.repositoryReducer;\n        let items = [] as any;\n        if (result.items !== undefined) {\n            items = result.items.map(r => <RepositoryPanel repositoryItem={r}/>);\n            this.setPager(result);\n            this.loadingBar.hideLoading();\n        }\n        return (\n            <div id={this.pageId} className=\"login-page-form\" style={{height: '90%', width: '95%'}}>\n                <Row>\n                    <label className=\"repository-note\">message from github: Only the first 1000 search results are\n                        available\",\"documentation_url\":\"https://developer.github.com/v3/search/\"</label>\n                </Row>\n                <div className=\"row\" style={{height: 'calc(100% - 25px)', overflowX: 'hidden', overflowY: 'auto'}}>\n                    <div className=\"col-md-2\">\n\n                        <CustomWidgetInputElement widgetProp={this.pageSize}/>\n                        <CustomWidgetInputElement widgetProp={this.pageNumber}/>\n                        <CustomWidgetDropDownElement widgetProp={this.languageList}/>\n\n                        <div className=\"e-card panel-bookmark\">\n                            <label className={\"label-bookmark\"}>Bookmark List</label>\n                            <CustomListBoxElement widgetProp={this.bookmarkList}/>\n                        </div>\n                    </div>\n                    <div className=\"col-md-10\" style={{borderLeft: '1px solid gray'}}>\n                        <br/>\n                        <Row>\n                            <Col md={7}>\n                                <h3> {result.total_count ? (result.total_count + ' repository results') : ''} </h3>\n                            </Col>\n                            <Col md={3}>\n                                <CustomWidgetInputElement width={'100%'} widgetProp={this.repositorySearchInput}/>\n                            </Col>\n                            <Col md={2}>\n                                <CustomWidgetButtonElement widgetProp={this.repositorySearchButton}/>\n                            </Col>\n                        </Row>\n                        <hr/>\n                        <div className=\"row repository-list-panel-class\">\n                            <ul style={{height: '100%', overflow: 'auto', width: '100%'}}>\n                                {items}\n                            </ul>\n                        </div>\n                        <div\n                            style={{position: \"absolute\", bottom: '10px', width: '100%'}}>\n                            <hr/>\n                            <div style={{margin: '0 auto', width: 'calc(100% - 130px)'}}>\n                                <CustomWidgetPagerElement widgetProp={this.pager}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({mainOperations, authenticationState, githubStateType}: IRootState) => ({\n    authenticationState,\n    mainOperations,\n    githubStateType\n});\n\nconst mapDispatchToProps = {\n    fetchRepositoryList,\n    fetchBookmarkList\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RepositorySearch);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './contents/styles/index.css';\nimport './contents/styles/load8.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@syncfusion/ej2/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport initialize from \"./shared/reducer/store\";\nimport {Route, Router, Switch} from \"react-router\";\nimport {createBrowserHistory} from 'history'\nimport LoginPage from \"./component/authentication/login/login-page\";\nimport {bindActionCreators} from \"redux\";\nimport {ACTION_TYPES} from \"./component/authentication/reducer/authentication-reducer\";\nimport RepositorySearch from \"./component/github/repository-search\";\n\n\nexport const globalStore = initialize();\n\nexport const clearAuthentication = (messageKey: string) => (dispatch: any) => {\n    dispatch(messageKey);\n    dispatch({\n        type: ACTION_TYPES.CLEAR_AUTH\n    });\n};\n\nbindActionCreators({clearAuthentication}, globalStore.dispatch);\n\nReactDOM.render(\n    <Provider store={globalStore}>\n        <div className=\"fullScreen-page-class\">\n            <div className=\"image-background-class\">\n                <div className=\"center-form-class\">\n                    <Router history={createBrowserHistory()}>\n                        <Switch>\n                            <Route path=\"/repository-search\" component={RepositorySearch}/>\n                            <Route exact component={LoginPage} path=\"*\"/>\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        </div>\n        <div className=\"page-footer-class\">This is Demo Project By Mehdi Najafian</div>\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}